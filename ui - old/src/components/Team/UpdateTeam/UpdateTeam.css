import React, { useState, useEffect } from 'react';
import { useDispatch, useSelector } from 'react-redux';
import { useParams } from 'react-router-dom';
import { getTeamById, updateTeamById } from '../../redux/team/team.actions';

const UpdateTeam = () => {
  const dispatch = useDispatch();
  const { id } = useParams();
  const selectedTeam = useSelector((state) => state.team.selectedTeam);
  const [teamData, setTeamData] = useState({
    name: '',
    description: '',
  });

  // Fetch the selected team data on component mount
  useEffect(() => {
    dispatch(getTeamById(id));
  }, [dispatch, id]);

  // Update the local state when the selectedTeam changes
  useEffect(() => {
    if (selectedTeam) {
      setTeamData({
        name: selectedTeam.name,
        description: selectedTeam.description,
      });
    }
  }, [selectedTeam]);

  // Function to handle form input changes
  const handleChange = (e) => {
    const { name, value } = e.target;
    setTeamData((prevData) => ({ ...prevData, [name]: value }));
  };

  // Function to handle team update
  const handleUpdateTeam = (e) => {
    e.preventDefault();
    dispatch(updateTeamById({ id, ...teamData }));
  };

  // Add any specific styles or classes for the UpdateTeam component here
  // You can use Tailwind CSS classes or custom styles
  return (
    <div>
      <h1 className="text-2xl font-semibold mb-4">Update Team</h1>
      {selectedTeam ? (
        <form className="space-y-4" onSubmit={handleUpdateTeam}>
          <div>
            <label htmlFor="name" className="block text-gray-600">
              Team Name
            </label>
            <input
              type="text"
              id="name"
              name="name"
              value={teamData.name}
              onChange={handleChange}
              className="w-full px-4 py-2 rounded-lg border focus:outline-none focus:border-blue-500"
              required
            />
          </div>

          <div>
            <label htmlFor="description" className="block text-gray-600">
              Description
            </label>
            <textarea
              id="description"
              name="description"
              value={teamData.description}
              onChange={handleChange}
              className="w-full px-4 py-2 rounded-lg border resize-none focus:outline-none focus:border-blue-500"
              rows="4"
              required
            ></textarea>
          </div>

          <div>
            <button
              type="submit"
              className="px-4 py-2 bg-blue-500 text-white font-semibold rounded-lg shadow-md hover:bg-blue-600"
            >
              Update Team
            </button>
          </div>
        </form>
      ) : (
        <p>Loading team details...</p>
      )}
    </div>
  );
};

export default UpdateTeam;
